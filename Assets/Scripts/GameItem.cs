using System;
using System.Collections;
using System.Collections.Generic;
using DG.Tweening;
using UnityEngine;

//-------этот скрипт вешается на 1 стандартный префаб ежа, которому вручную меняем картинки в инспекторе внутри компонента SpriteRenderer,
// когда делаем уровни, копируя этого ежа в меню иерархии и меням, например, на батон.
// !!! там же мнняем Order in Layer чтобы не перекрывалось фоном !!!!
// ??? - как попробовать обратиться к OrderInLayer и задать программно?

namespace HOG
{
    public class GameItem : MonoBehaviour
    {
        [SerializeField] private string id; //писать батон это или йож
        [SerializeField] private float scaleFactor = 2;
        [SerializeField] private float scaleDuration = 0.5f;

        //Sprite Renderer - стандартный компонент-скрипт на еже
        private SpriteRenderer _spriteRenderer;//это тип переменной куда будем вставлять картинку????
        
        // НЕ ДОШЛО, со слов АК:     системный тип делегата.. тока с С#.... 
        // Делегат - позволяет делать ссылку на метод внутри типа!:?
        // ссылка на метод и можем работать с ней ИЗВНЕ
        // event защищает чтобы ограничитть работу извне - вызов события может произойти только в классе в котором оно объеявлено
        public event Action<string> OnFind; // в скобках параметр который будет отправляться в момент вызова метода

        //--------------------------------------------------------------------------------------------

        public void Initialize() //получить ссылку на....?
        {
            _spriteRenderer = GetComponent<SpriteRenderer>(); //получает картинку через навешенный скрипт,
            //без этого не сможем обратиться к ее прозрачности?
        }

        private void Start() //получить ссылку
        {
            // тут без круглых кавычек, которые значат вызов метода "вызовься"
            // а вот таким делом - мы обращаемся к нему как к сущности, передаем ее
            // ПЕРЕДАЛИ МЕТОД КАК ОБЪЕКТ - уникальная фишка в C#
            //-------------------- пример ---------------------------
            // OnFind = Find;
            // OnFind.Invoke();
        }


        private void OnMouseUpAsButton() //если отжали мышь над тем же ежом
        {
            //print(gameObject.name);
            Find();
        }

        //--------------------------------------------------------------------------------------------

        private void Find() //когда нашли объект
        {
            // вводим переменную чтобы словить уже имеющийся скейл 
            var startScale = transform.localScale;
            
            // увеличит скейл до заданной переменной
            //     по завершению
            //        запрозрачнит до нуля по заданной переменной полученную картинку
            //          по завершению
            //            вызовет функцию TurnOff
            transform.DOScale(transform.localScale * scaleFactor, scaleDuration)
                .OnComplete(
                    () => _spriteRenderer.DOFade(0, scaleDuration)
                    .OnComplete(
                        TurnOff));
        }

        
        //----------------- снять галочку в еже и ... ????-------------------------------------------
        private void TurnOff()
        {
            gameObject.SetActive(false);

            //---------- !!! ----------- тут мы снаружи на него подписались
            // ставится ? ибо он не знал был ли у него подписчик -  ?  нужен всегда, как защита от того что нет того
            // кто настроился на нашу волну рации  и избежать ситуации что если мы пытаемся передать инфу никому
            
            // это к той ссылке на которую подписались в соседнем файле!!!!!!! и передаем id!!!

            // когда произойдет выключи объект - передали метод выключения объекта который вызываем
            OnFind?.Invoke(id); //???
        }
        
    }
}